# ** ----------------------------------------------------------------
# ** This Makefile builds the WireGuard firmware for picoRV32
# ** ----------------------------------------------------------------

# ** Ensure the required RISC-V GCC package is installed:
# ** Command: apt install gcc-riscv64-unknown-elf
CROSS = riscv64-unknown-elf-
CFLAGS = -std=c++11 -DTCM=1 -DHARVARD=1

# ** ----------------------------------------------------------------
# ** WireGuard Firmware Build Configuration
# ** ----------------------------------------------------------------
# ** Set directory for WireGuard sources
WIREGUARD_DIR = $(CURDIR)

# ** Build target for generating Verilog hex file from the ELF binary
hex_wireguard: $(WIREGUARD_DIR)/main.elf
	$(CROSS)objcopy -O verilog $< $(WIREGUARD_DIR)/main.hex

# ** Build target for creating firmware binary and generating program memory file
firmware_wireguard: $(WIREGUARD_DIR)/main.elf
	$(CROSS)objcopy -O binary $< $(WIREGUARD_DIR)/main.bin
	python3 $(WIREGUARD_DIR)/imem.INIT.py

# ** Compile and link the main ELF executable from all source files and the linker script
$(WIREGUARD_DIR)/main.elf: $(WIREGUARD_DIR)/main.lds  $(WIREGUARD_DIR)/boot_crt.S $(WIREGUARD_DIR)/main.cpp $(WIREGUARD_DIR)/assert.h $(WIREGUARD_DIR)/wireguard_regs.h $(WIREGUARD_DIR)/csr_hw.h $(WIREGUARD_DIR)/uart.h $(WIREGUARD_DIR)/uart.c
	$(CROSS)g++ $(CFLAGS) -I$(WIREGUARD_DIR) -march=rv32im -mabi=ilp32 -Wl,--build-id=none,-Bstatic,-T,$(WIREGUARD_DIR)/main.lds,-Map,$(WIREGUARD_DIR)/main.map,--strip-debug -ffreestanding -nostdlib -static -fomit-frame-pointer -fno-exceptions -fno-asynchronous-unwind-tables -fno-unwind-tables -o $@ $(WIREGUARD_DIR)/boot_crt.S $(WIREGUARD_DIR)/main.cpp $(WIREGUARD_DIR)/uart.c

# ** Preprocess the sections linker script using the C preprocessor
$(WIREGUARD_DIR)/main.lds: $(WIREGUARD_DIR)/link_map.lds
	$(CROSS)cpp $(CFLAGS) -P -o $@ $<

# ** Declare phony targets for cleaning build artifacts
.PHONY: clean
clean:
	rm -f $(WIREGUARD_DIR)/main.elf
	rm -f $(WIREGUARD_DIR)/main.lds
	rm -f $(WIREGUARD_DIR)/main.map
	rm -f $(WIREGUARD_DIR)/main.bin
	rm -f imem.INIT.vh
	rm -f firmware.hex
	rm -f $(WIREGUARD_DIR)/main.hex
