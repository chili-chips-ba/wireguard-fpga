; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	D:\WINCE600\PLATFORM\SMDK6410\src\drivers\Camera\OV9650_MODULE\OV9650_MODULE.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?g_ucSlaveID@@3EA| [ DATA ]		; g_ucSlaveID
	EXPORT	|?sensor_init_data@@3PAY02EA| [ DATA ]	; sensor_init_data
	EXPORT	|?sensor_720p@@3PAY02EA| [ DATA ]	; sensor_720p
	EXPORT	|?sensor_svga@@3PAY02EA| [ DATA ]	; sensor_svga
	EXPORT	|?OV3640_reg@@3PAY02EA| [ DATA ]	; OV3640_reg
	EXPORT	|?OV3640_reg_preview@@3PAY02EA| [ DATA ] ; OV3640_reg_preview
	EXPORT	|?OV3640_reg_capture@@3PAY02EA| [ DATA ] ; OV3640_reg_capture

  00000			 AREA	 |.bss|, NOINIT
|?g_ucSlaveID@@3EA| % 0x1				; g_ucSlaveID

  00000			 AREA	 |.data|, DATA
|?sensor_init_data@@3PAY02EA| DCB 0x31			; sensor_init_data
	DCB	0x3
	DCB	0x11
	DCB	0x30
	DCB	0x8
	DCB	0x82
	DCB	0x30
	DCB	0x8
	DCB	0x42
	DCB	0x31
	DCB	0x3
	DCB	0x3
	DCB	0x30
	DCB	0x17
	DCB	0xff
	DCB	0x30
	DCB	0x18
	DCB	0xff
	DCB	0x30
	DCB	0x34
	DCB	0x1a
	DCB	0x30
	DCB	0x35
	DCB	0x21
	DCB	0x30
	DCB	0x36
	DCB	0x46
	DCB	0x30
	DCB	0x37
	DCB	0x13
	DCB	0x31
	DCB	0x8
	DCB	0x1
	DCB	0x36
	DCB	0x30
	DCB	0x36
	DCB	0x36
	DCB	0x31
	DCB	0xe
	DCB	0x36
	DCB	0x32
	DCB	0xe2
	DCB	0x36
	DCB	0x33
	DCB	0x12
	DCB	0x36
	DCB	0x21
	DCB	0xe0
	DCB	0x37
	DCB	0x4
	DCB	0xa0
	DCB	0x37
	DCB	0x3
	DCB	0x5a
	DCB	0x37
	DCB	0x15
	DCB	0x78
	DCB	0x37
	DCB	0x17
	DCB	0x1
	DCB	0x37
	DCB	0xb
	DCB	0x60
	DCB	0x37
	DCB	0x5
	DCB	0x1a
	DCB	0x39
	DCB	0x5
	DCB	0x2
	DCB	0x39
	DCB	0x6
	DCB	0x10
	DCB	0x39
	DCB	0x1
	DCB	0xa
	DCB	0x37
	DCB	0x31
	DCB	0x12
	DCB	0x36
	DCB	0x0
	DCB	0x8
	DCB	0x36
	DCB	0x1
	DCB	0x33
	DCB	0x30
	DCB	0x2d
	DCB	0x60
	DCB	0x36
	DCB	0x20
	DCB	0x52
	DCB	0x37
	DCB	0x1b
	DCB	0x20
	DCB	0x47
	DCB	0x1c
	DCB	0x50
	DCB	0x3a
	DCB	0x13
	DCB	0x43
	DCB	0x3a
	DCB	0x18
	DCB	0x0
	DCB	0x3a
	DCB	0x19
	DCB	0xf8
	DCB	0x36
	DCB	0x35
	DCB	0x13
	DCB	0x36
	DCB	0x36
	DCB	0x3
	DCB	0x36
	DCB	0x34
	DCB	0x40
	DCB	0x36
	DCB	0x22
	DCB	0x1
	DCB	0x3c
	DCB	0x1
	DCB	0x34
	DCB	0x3c
	DCB	0x4
	DCB	0x28
	DCB	0x3c
	DCB	0x5
	DCB	0x98
	DCB	0x3c
	DCB	0x6
	DCB	0x0
	DCB	0x3c
	DCB	0x7
	DCB	0x8
	DCB	0x3c
	DCB	0x8
	DCB	0x0
	DCB	0x3c
	DCB	0x9
	DCB	0x1c
	DCB	0x3c
	DCB	0xa
	DCB	0x9c
	DCB	0x3c
	DCB	0xb
	DCB	0x40
	DCB	0x38
	DCB	0x20
	DCB	0x41
	DCB	0x38
	DCB	0x21
	DCB	0x7
	DCB	0x38
	DCB	0x14
	DCB	0x31
	DCB	0x38
	DCB	0x15
	DCB	0x31
	DCB	0x38
	DCB	0x0
	DCB	0x0
	DCB	0x38
	DCB	0x1
	DCB	0x0
	DCB	0x38
	DCB	0x2
	DCB	0x0
	DCB	0x38
	DCB	0x3
	DCB	0x4
	DCB	0x38
	DCB	0x4
	DCB	0xa
	DCB	0x38
	DCB	0x5
	DCB	0x3f
	DCB	0x38
	DCB	0x6
	DCB	0x7
	DCB	0x38
	DCB	0x7
	DCB	0x9b
	DCB	0x38
	DCB	0x8
	DCB	0x3
	DCB	0x38
	DCB	0x9
	DCB	0x20
	DCB	0x38
	DCB	0xa
	DCB	0x2
	DCB	0x38
	DCB	0xb
	DCB	0x58
	DCB	0x38
	DCB	0xc
	DCB	0x7
	DCB	0x38
	DCB	0xd
	DCB	0x68
	DCB	0x38
	DCB	0xe
	DCB	0x3
	DCB	0x38
	DCB	0xf
	DCB	0xd8
	DCB	0x38
	DCB	0x10
	DCB	0x0
	DCB	0x38
	DCB	0x11
	DCB	0x10
	DCB	0x38
	DCB	0x12
	DCB	0x0
	DCB	0x38
	DCB	0x13
	DCB	0x6
	DCB	0x36
	DCB	0x18
	DCB	0x0
	DCB	0x36
	DCB	0x12
	DCB	0x29
	DCB	0x37
	DCB	0x8
	DCB	0x64
	DCB	0x37
	DCB	0x9
	DCB	0x52
	DCB	0x37
	DCB	0xc
	DCB	0x3
	DCB	0x3a
	DCB	0x2
	DCB	0x3
	DCB	0x3a
	DCB	0x3
	DCB	0xd8
	DCB	0x3a
	DCB	0x8
	DCB	0x1
	DCB	0x3a
	DCB	0x9
	DCB	0x27
	DCB	0x3a
	DCB	0xa
	DCB	0x0
	DCB	0x3a
	DCB	0xb
	DCB	0xf6
	DCB	0x3a
	DCB	0xe
	DCB	0x3
	DCB	0x3a
	DCB	0xd
	DCB	0x4
	DCB	0x3a
	DCB	0x14
	DCB	0x3
	DCB	0x3a
	DCB	0x15
	DCB	0xd8
	DCB	0x40
	DCB	0x1
	DCB	0x2
	DCB	0x40
	DCB	0x4
	DCB	0x2
	DCB	0x30
	DCB	0x0
	DCB	0x0
	DCB	0x30
	DCB	0x2
	DCB	0x1c
	DCB	0x30
	DCB	0x4
	DCB	0xff
	DCB	0x30
	DCB	0x6
	DCB	0xc3
	DCB	0x30
	DCB	0xe
	DCB	0x58
	DCB	0x30
	DCB	0x2e
	DCB	0x0
	DCB	0x47
	DCB	0x40
	DCB	0x20
	DCB	0x43
	DCB	0x0
	DCB	0x30
	DCB	0x50
	DCB	0x1f
	DCB	0x0
	DCB	0x47
	DCB	0x13
	DCB	0x3
	DCB	0x44
	DCB	0x7
	DCB	0x4
	DCB	0x44
	DCB	0xe
	DCB	0x0
	DCB	0x46
	DCB	0xb
	DCB	0x35
	DCB	0x46
	DCB	0xc
	DCB	0x20
	DCB	0x48
	DCB	0x37
	DCB	0x22
	DCB	0x38
	DCB	0x24
	DCB	0x2
	DCB	0x50
	DCB	0x0
	DCB	0xa7
	DCB	0x50
	DCB	0x1
	DCB	0xa3
	DCB	0x51
	DCB	0x80
	DCB	0xff
	DCB	0x51
	DCB	0x81
	DCB	0xf2
	DCB	0x51
	DCB	0x82
	DCB	0x0
	DCB	0x51
	DCB	0x83
	DCB	0x14
	DCB	0x51
	DCB	0x84
	DCB	0x25
	DCB	0x51
	DCB	0x85
	DCB	0x24
	DCB	0x51
	DCB	0x86
	DCB	0x9
	DCB	0x51
	DCB	0x87
	DCB	0x9
	DCB	0x51
	DCB	0x88
	DCB	0x9
	DCB	0x51
	DCB	0x89
	DCB	0x75
	DCB	0x51
	DCB	0x8a
	DCB	0x54
	DCB	0x51
	DCB	0x8b
	DCB	0xe0
	DCB	0x51
	DCB	0x8c
	DCB	0xb2
	DCB	0x51
	DCB	0x8d
	DCB	0x42
	DCB	0x51
	DCB	0x8e
	DCB	0x3d
	DCB	0x51
	DCB	0x8f
	DCB	0x56
	DCB	0x51
	DCB	0x90
	DCB	0x46
	DCB	0x51
	DCB	0x91
	DCB	0xf8
	DCB	0x51
	DCB	0x92
	DCB	0x4
	DCB	0x51
	DCB	0x93
	DCB	0x70
	DCB	0x51
	DCB	0x94
	DCB	0xf0
	DCB	0x51
	DCB	0x95
	DCB	0xf0
	DCB	0x51
	DCB	0x96
	DCB	0x3
	DCB	0x51
	DCB	0x97
	DCB	0x1
	DCB	0x51
	DCB	0x98
	DCB	0x4
	DCB	0x51
	DCB	0x99
	DCB	0x12
	DCB	0x51
	DCB	0x9a
	DCB	0x4
	DCB	0x51
	DCB	0x9b
	DCB	0x0
	DCB	0x51
	DCB	0x9c
	DCB	0x6
	DCB	0x51
	DCB	0x9d
	DCB	0x82
	DCB	0x51
	DCB	0x9e
	DCB	0x38
	DCB	0x53
	DCB	0x81
	DCB	0x1e
	DCB	0x53
	DCB	0x82
	DCB	0x5b
	DCB	0x53
	DCB	0x83
	DCB	0x8
	DCB	0x53
	DCB	0x84
	DCB	0xa
	DCB	0x53
	DCB	0x85
	DCB	0x7e
	DCB	0x53
	DCB	0x86
	DCB	0x88
	DCB	0x53
	DCB	0x87
	DCB	0x7c
	DCB	0x53
	DCB	0x88
	DCB	0x6c
	DCB	0x53
	DCB	0x89
	DCB	0x10
	DCB	0x53
	DCB	0x8a
	DCB	0x1
	DCB	0x53
	DCB	0x8b
	DCB	0x98
	DCB	0x53
	DCB	0x0
	DCB	0x8
	DCB	0x53
	DCB	0x1
	DCB	0x30
	DCB	0x53
	DCB	0x2
	DCB	0x10
	DCB	0x53
	DCB	0x3
	DCB	0x0
	DCB	0x53
	DCB	0x4
	DCB	0x8
	DCB	0x53
	DCB	0x5
	DCB	0x30
	DCB	0x53
	DCB	0x6
	DCB	0x8
	DCB	0x53
	DCB	0x7
	DCB	0x16
	DCB	0x53
	DCB	0x9
	DCB	0x8
	DCB	0x53
	DCB	0xa
	DCB	0x30
	DCB	0x53
	DCB	0xb
	DCB	0x4
	DCB	0x53
	DCB	0xc
	DCB	0x6
	DCB	0x54
	DCB	0x80
	DCB	0x1
	DCB	0x54
	DCB	0x81
	DCB	0x8
	DCB	0x54
	DCB	0x82
	DCB	0x14
	DCB	0x54
	DCB	0x83
	DCB	0x28
	DCB	0x54
	DCB	0x84
	DCB	0x51
	DCB	0x54
	DCB	0x85
	DCB	0x65
	DCB	0x54
	DCB	0x86
	DCB	0x71
	DCB	0x54
	DCB	0x87
	DCB	0x7d
	DCB	0x54
	DCB	0x88
	DCB	0x87
	DCB	0x54
	DCB	0x89
	DCB	0x91
	DCB	0x54
	DCB	0x8a
	DCB	0x9a
	DCB	0x54
	DCB	0x8b
	DCB	0xaa
	DCB	0x54
	DCB	0x8c
	DCB	0xb8
	DCB	0x54
	DCB	0x8d
	DCB	0xcd
	DCB	0x54
	DCB	0x8e
	DCB	0xdd
	DCB	0x54
	DCB	0x8f
	DCB	0xea
	DCB	0x54
	DCB	0x90
	DCB	0x1d
	DCB	0x55
	DCB	0x80
	DCB	0x2
	DCB	0x55
	DCB	0x83
	DCB	0x40
	DCB	0x55
	DCB	0x84
	DCB	0x10
	DCB	0x55
	DCB	0x89
	DCB	0x10
	DCB	0x55
	DCB	0x8a
	DCB	0x0
	DCB	0x55
	DCB	0x8b
	DCB	0xf8
	DCB	0x58
	DCB	0x0
	DCB	0x23
	DCB	0x58
	DCB	0x1
	DCB	0x14
	DCB	0x58
	DCB	0x2
	DCB	0xf
	DCB	0x58
	DCB	0x3
	DCB	0xf
	DCB	0x58
	DCB	0x4
	DCB	0x12
	DCB	0x58
	DCB	0x5
	DCB	0x26
	DCB	0x58
	DCB	0x6
	DCB	0xc
	DCB	0x58
	DCB	0x7
	DCB	0x8
	DCB	0x58
	DCB	0x8
	DCB	0x5
	DCB	0x58
	DCB	0x9
	DCB	0x5
	DCB	0x58
	DCB	0xa
	DCB	0x8
	DCB	0x58
	DCB	0xb
	DCB	0xd
	DCB	0x58
	DCB	0xc
	DCB	0x8
	DCB	0x58
	DCB	0xd
	DCB	0x3
	DCB	0x58
	DCB	0xe
	DCB	0x0
	DCB	0x58
	DCB	0xf
	DCB	0x0
	DCB	0x58
	DCB	0x10
	DCB	0x3
	DCB	0x58
	DCB	0x11
	DCB	0x9
	DCB	0x58
	DCB	0x12
	DCB	0x7
	DCB	0x58
	DCB	0x13
	DCB	0x3
	DCB	0x58
	DCB	0x14
	DCB	0x0
	DCB	0x58
	DCB	0x15
	DCB	0x1
	DCB	0x58
	DCB	0x16
	DCB	0x3
	DCB	0x58
	DCB	0x17
	DCB	0x8
	DCB	0x58
	DCB	0x18
	DCB	0xd
	DCB	0x58
	DCB	0x19
	DCB	0x8
	DCB	0x58
	DCB	0x1a
	DCB	0x5
	DCB	0x58
	DCB	0x1b
	DCB	0x6
	DCB	0x58
	DCB	0x1c
	DCB	0x8
	DCB	0x58
	DCB	0x1d
	DCB	0xe
	DCB	0x58
	DCB	0x1e
	DCB	0x29
	DCB	0x58
	DCB	0x1f
	DCB	0x17
	DCB	0x58
	DCB	0x20
	DCB	0x11
	DCB	0x58
	DCB	0x21
	DCB	0x11
	DCB	0x58
	DCB	0x22
	DCB	0x15
	DCB	0x58
	DCB	0x23
	DCB	0x28
	DCB	0x58
	DCB	0x24
	DCB	0x46
	DCB	0x58
	DCB	0x25
	DCB	0x26
	DCB	0x58
	DCB	0x26
	DCB	0x8
	DCB	0x58
	DCB	0x27
	DCB	0x26
	DCB	0x58
	DCB	0x28
	DCB	0x64
	DCB	0x58
	DCB	0x29
	DCB	0x26
	DCB	0x58
	DCB	0x2a
	DCB	0x24
	DCB	0x58
	DCB	0x2b
	DCB	0x22
	DCB	0x58
	DCB	0x2c
	DCB	0x24
	DCB	0x58
	DCB	0x2d
	DCB	0x24
	DCB	0x58
	DCB	0x2e
	DCB	0x6
	DCB	0x58
	DCB	0x2f
	DCB	0x22
	DCB	0x58
	DCB	0x30
	DCB	0x40
	DCB	0x58
	DCB	0x31
	DCB	0x42
	DCB	0x58
	DCB	0x32
	DCB	0x24
	DCB	0x58
	DCB	0x33
	DCB	0x26
	DCB	0x58
	DCB	0x34
	DCB	0x24
	DCB	0x58
	DCB	0x35
	DCB	0x22
	DCB	0x58
	DCB	0x36
	DCB	0x22
	DCB	0x58
	DCB	0x37
	DCB	0x26
	DCB	0x58
	DCB	0x38
	DCB	0x44
	DCB	0x58
	DCB	0x39
	DCB	0x24
	DCB	0x58
	DCB	0x3a
	DCB	0x26
	DCB	0x58
	DCB	0x3b
	DCB	0x28
	DCB	0x58
	DCB	0x3c
	DCB	0x42
	DCB	0x58
	DCB	0x3d
	DCB	0xce
	DCB	0x50
	DCB	0x25
	DCB	0x0
	DCB	0x3a
	DCB	0xf
	DCB	0x30
	DCB	0x3a
	DCB	0x10
	DCB	0x28
	DCB	0x3a
	DCB	0x1b
	DCB	0x30
	DCB	0x3a
	DCB	0x1e
	DCB	0x26
	DCB	0x3a
	DCB	0x11
	DCB	0x60
	DCB	0x3a
	DCB	0x1f
	DCB	0x14
	DCB	0x30
	DCB	0x8
	DCB	0x2
	DCB	0xff
	DCB	0xff
	DCB	0x0
	%	3
|?sensor_720p@@3PAY02EA| DCB 0x35			; sensor_720p
	DCB	0x3
	DCB	0x0
	DCB	0x3c
	DCB	0x7
	DCB	0x7
	DCB	0x38
	DCB	0x3
	DCB	0xfa
	DCB	0x38
	DCB	0x6
	DCB	0x6
	DCB	0x38
	DCB	0x7
	DCB	0xa9
	DCB	0x38
	DCB	0x8
	DCB	0x5
	DCB	0x38
	DCB	0x9
	DCB	0x0
	DCB	0x38
	DCB	0xa
	DCB	0x2
	DCB	0x38
	DCB	0xb
	DCB	0xd0
	DCB	0x38
	DCB	0xc
	DCB	0x7
	DCB	0x38
	DCB	0xd
	DCB	0x64
	DCB	0x38
	DCB	0xe
	DCB	0x2
	DCB	0x38
	DCB	0xf
	DCB	0xe4
	DCB	0x38
	DCB	0x13
	DCB	0x4
	DCB	0x3a
	DCB	0x2
	DCB	0x2
	DCB	0x3a
	DCB	0x3
	DCB	0xe4
	DCB	0x3a
	DCB	0x8
	DCB	0x1
	DCB	0x3a
	DCB	0x9
	DCB	0xbc
	DCB	0x3a
	DCB	0xa
	DCB	0x1
	DCB	0x3a
	DCB	0xb
	DCB	0x72
	DCB	0x3a
	DCB	0xe
	DCB	0x1
	DCB	0x3a
	DCB	0xd
	DCB	0x2
	DCB	0x3a
	DCB	0x14
	DCB	0x2
	DCB	0x3a
	DCB	0x15
	DCB	0xe4
	DCB	0x30
	DCB	0x2
	DCB	0x0
	DCB	0x47
	DCB	0x13
	DCB	0x2
	DCB	0x48
	DCB	0x37
	DCB	0x16
	DCB	0x38
	DCB	0x24
	DCB	0x4
	DCB	0x50
	DCB	0x1
	DCB	0x83
	DCB	0x30
	DCB	0x35
	DCB	0x21
	DCB	0x30
	DCB	0x36
	DCB	0x46
	DCB	0x48
	DCB	0x37
	DCB	0x22
	DCB	0x50
	DCB	0x1
	DCB	0xa3
	DCB	0x34
	DCB	0x6
	DCB	0x0
	DCB	0x51
	DCB	0x92
	DCB	0x4
	DCB	0x51
	DCB	0x91
	DCB	0xf8
	DCB	0x51
	DCB	0x93
	DCB	0x70
	DCB	0x51
	DCB	0x94
	DCB	0xf0
	DCB	0x51
	DCB	0x95
	DCB	0xf0
	DCB	0x51
	DCB	0x8d
	DCB	0x3d
	DCB	0x51
	DCB	0x8f
	DCB	0x54
	DCB	0x51
	DCB	0x8e
	DCB	0x3d
	DCB	0x51
	DCB	0x90
	DCB	0x54
	DCB	0x51
	DCB	0x8b
	DCB	0xa8
	DCB	0x51
	DCB	0x8c
	DCB	0xa8
	DCB	0x51
	DCB	0x87
	DCB	0x18
	DCB	0x51
	DCB	0x88
	DCB	0x18
	DCB	0x51
	DCB	0x89
	DCB	0x6e
	DCB	0x51
	DCB	0x8a
	DCB	0x68
	DCB	0x51
	DCB	0x86
	DCB	0x1c
	DCB	0x51
	DCB	0x81
	DCB	0x50
	DCB	0x51
	DCB	0x84
	DCB	0x25
	DCB	0x51
	DCB	0x82
	DCB	0x11
	DCB	0x51
	DCB	0x83
	DCB	0x14
	DCB	0x51
	DCB	0x84
	DCB	0x25
	DCB	0x51
	DCB	0x85
	DCB	0x24
	DCB	0xff
	DCB	0xff
	DCB	0x0
	%	5
|?sensor_svga@@3PAY02EA| DCB 0x35			; sensor_svga
	DCB	0x3
	DCB	0x7
	DCB	0x3a
	DCB	0x0
	DCB	0x78
	DCB	0x35
	DCB	0xc
	DCB	0x0
	DCB	0x35
	DCB	0xd
	DCB	0x0
	DCB	0x3c
	DCB	0x7
	DCB	0x7
	DCB	0x38
	DCB	0x20
	DCB	0x40
	DCB	0x38
	DCB	0x21
	DCB	0x6
	DCB	0x38
	DCB	0x14
	DCB	0x11
	DCB	0x38
	DCB	0x15
	DCB	0x11
	DCB	0x38
	DCB	0x3
	DCB	0x0
	DCB	0x38
	DCB	0x7
	DCB	0x9f
	DCB	0x38
	DCB	0x8
	DCB	0x8
	DCB	0x38
	DCB	0x9
	DCB	0x0
	DCB	0x38
	DCB	0xa
	DCB	0x6
	DCB	0x38
	DCB	0xb
	DCB	0x0
	DCB	0x38
	DCB	0xc
	DCB	0xb
	DCB	0x38
	DCB	0xd
	DCB	0x1c
	DCB	0x38
	DCB	0xe
	DCB	0x7
	DCB	0x38
	DCB	0xf
	DCB	0xb0
	DCB	0x38
	DCB	0x13
	DCB	0x4
	DCB	0x36
	DCB	0x18
	DCB	0x4
	DCB	0x36
	DCB	0x12
	DCB	0x2b
	DCB	0x37
	DCB	0x9
	DCB	0x12
	DCB	0x37
	DCB	0xc
	DCB	0x0
	DCB	0x3a
	DCB	0x2
	DCB	0x7
	DCB	0x3a
	DCB	0x3
	DCB	0xb0
	DCB	0x3a
	DCB	0xe
	DCB	0x6
	DCB	0x3a
	DCB	0xd
	DCB	0x8
	DCB	0x3a
	DCB	0x14
	DCB	0x7
	DCB	0x3a
	DCB	0x15
	DCB	0xb0
	DCB	0x40
	DCB	0x4
	DCB	0x6
	DCB	0x30
	DCB	0x35
	DCB	0x21
	DCB	0x30
	DCB	0x36
	DCB	0x46
	DCB	0x48
	DCB	0x37
	DCB	0x2c
	DCB	0x50
	DCB	0x1
	DCB	0xa3
	DCB	0xff
	DCB	0xff
	DCB	0x0
	%	4
|?OV3640_reg@@3PAY02EA| DCB 0x43			; OV3640_reg
	DCB	0x0
	DCB	0x4
	DCB	0x30
	DCB	0x12
	DCB	0x80
	DCB	0x30
	DCB	0x4d
	DCB	0x45
	DCB	0x30
	DCB	0xa7
	DCB	0x5e
	DCB	0x30
	DCB	0x87
	DCB	0x16
	DCB	0x30
	DCB	0x9c
	DCB	0x1a
	DCB	0x30
	DCB	0xa2
	DCB	0xe4
	DCB	0x30
	DCB	0xaa
	DCB	0x42
	DCB	0x30
	DCB	0xb0
	DCB	0xff
	DCB	0x30
	DCB	0xb1
	DCB	0xff
	DCB	0x30
	DCB	0xb2
	DCB	0x10
	DCB	0x30
	DCB	0xe
	DCB	0x39
	DCB	0x30
	DCB	0xf
	DCB	0x21
	DCB	0x30
	DCB	0x10
	DCB	0x20
	DCB	0x30
	DCB	0x4c
	DCB	0x81
	DCB	0x30
	DCB	0xd7
	DCB	0x10
	DCB	0x30
	DCB	0xd9
	DCB	0xd
	DCB	0x30
	DCB	0xdb
	DCB	0x8
	DCB	0x30
	DCB	0x16
	DCB	0x82
	DCB	0x30
	DCB	0x18
	DCB	0x48
	DCB	0x30
	DCB	0x19
	DCB	0x40
	DCB	0x30
	DCB	0x1a
	DCB	0x82
	DCB	0x30
	DCB	0x7d
	DCB	0x0
	DCB	0x30
	DCB	0x87
	DCB	0x2
	DCB	0x30
	DCB	0x82
	DCB	0x20
	DCB	0x30
	DCB	0x15
	DCB	0x15
	DCB	0x30
	DCB	0x14
	DCB	0x84
	DCB	0x30
	DCB	0x13
	DCB	0xf7
	DCB	0x30
	DCB	0x3c
	DCB	0x8
	DCB	0x30
	DCB	0x3d
	DCB	0x18
	DCB	0x30
	DCB	0x3e
	DCB	0x6
	DCB	0x30
	DCB	0x3f
	DCB	0xc
	DCB	0x30
	DCB	0x30
	DCB	0x62
	DCB	0x30
	DCB	0x31
	DCB	0x26
	DCB	0x30
	DCB	0x32
	DCB	0xe6
	DCB	0x30
	DCB	0x33
	DCB	0x6e
	DCB	0x30
	DCB	0x34
	DCB	0xea
	DCB	0x30
	DCB	0x35
	DCB	0xae
	DCB	0x30
	DCB	0x36
	DCB	0xa6
	DCB	0x30
	DCB	0x37
	DCB	0x6a
	DCB	0x30
	DCB	0x7c
	DCB	0x10
	DCB	0x31
	DCB	0x4
	DCB	0x2
	DCB	0x31
	DCB	0x5
	DCB	0xfd
	DCB	0x31
	DCB	0x6
	DCB	0x0
	DCB	0x31
	DCB	0x7
	DCB	0xff
	DCB	0x33
	DCB	0x0
	DCB	0x13
	DCB	0x33
	DCB	0x1
	DCB	0xde
	DCB	0x33
	DCB	0x2
	DCB	0xcf
	DCB	0x33
	DCB	0x12
	DCB	0x26
	DCB	0x33
	DCB	0x14
	DCB	0x42
	DCB	0x33
	DCB	0x13
	DCB	0x2b
	DCB	0x33
	DCB	0x15
	DCB	0x42
	DCB	0x33
	DCB	0x10
	DCB	0xd0
	DCB	0x33
	DCB	0x11
	DCB	0xbd
	DCB	0x33
	DCB	0xc
	DCB	0x18
	DCB	0x33
	DCB	0xd
	DCB	0x18
	DCB	0x33
	DCB	0xe
	DCB	0x56
	DCB	0x33
	DCB	0xf
	DCB	0x5c
	DCB	0x33
	DCB	0xb
	DCB	0x1c
	DCB	0x33
	DCB	0x6
	DCB	0x5c
	DCB	0x33
	DCB	0x7
	DCB	0x11
	DCB	0x33
	DCB	0x6a
	DCB	0x52
	DCB	0x33
	DCB	0x70
	DCB	0x46
	DCB	0x33
	DCB	0x76
	DCB	0x38
	DCB	0x30
	DCB	0xb8
	DCB	0x20
	DCB	0x30
	DCB	0xb9
	DCB	0x17
	DCB	0x30
	DCB	0xba
	DCB	0x0
	DCB	0x30
	DCB	0xbb
	DCB	0x8
	DCB	0x35
	DCB	0x7
	DCB	0x6
	DCB	0x35
	DCB	0xa
	DCB	0x4f
	DCB	0x31
	DCB	0x0
	DCB	0x2
	DCB	0x33
	DCB	0x1
	DCB	0xde
	DCB	0x33
	DCB	0x4
	DCB	0xfc
	DCB	0x34
	DCB	0x0
	DCB	0x0
	DCB	0x34
	DCB	0x4
	DCB	0x0
	DCB	0x36
	DCB	0x0
	DCB	0xc0
	DCB	0x30
	DCB	0x88
	DCB	0x8
	DCB	0x30
	DCB	0x89
	DCB	0x0
	DCB	0x30
	DCB	0x8a
	DCB	0x6
	DCB	0x30
	DCB	0x8b
	DCB	0x0
	DCB	0x30
	DCB	0x8d
	DCB	0x4
	DCB	0x30
	DCB	0x86
	DCB	0x3
	DCB	0x30
	DCB	0x86
	DCB	0x0
	DCB	0x30
	DCB	0xa9
	DCB	0xb5
	DCB	0x33
	DCB	0x17
	DCB	0x4
	DCB	0x33
	DCB	0x16
	DCB	0xf8
	DCB	0x33
	DCB	0x12
	DCB	0x31
	DCB	0x33
	DCB	0x14
	DCB	0x57
	DCB	0x33
	DCB	0x13
	DCB	0x28
	DCB	0x33
	DCB	0x15
	DCB	0x3d
	DCB	0x33
	DCB	0x11
	DCB	0xd0
	DCB	0x33
	DCB	0x10
	DCB	0xb6
	DCB	0x33
	DCB	0xc
	DCB	0x16
	DCB	0x33
	DCB	0xd
	DCB	0x16
	DCB	0x33
	DCB	0xe
	DCB	0x5f
	DCB	0x33
	DCB	0xf
	DCB	0x5c
	DCB	0x33
	DCB	0xb
	DCB	0x18
	DCB	0x33
	DCB	0x6
	DCB	0x5c
	DCB	0x33
	DCB	0x7
	DCB	0x11
	DCB	0x33
	DCB	0x8
	DCB	0x25
	DCB	0x33
	DCB	0x9
	DCB	0x21
	DCB	0x33
	DCB	0x40
	DCB	0x20
	DCB	0x33
	DCB	0x41
	DCB	0x58
	DCB	0x33
	DCB	0x42
	DCB	0x8
	DCB	0x33
	DCB	0x43
	DCB	0x21
	DCB	0x33
	DCB	0x44
	DCB	0xbe
	DCB	0x33
	DCB	0x45
	DCB	0xe0
	DCB	0x33
	DCB	0x46
	DCB	0xca
	DCB	0x33
	DCB	0x47
	DCB	0xc6
	DCB	0x33
	DCB	0x48
	DCB	0x4
	DCB	0x33
	DCB	0x49
	DCB	0x98
	DCB	0x33
	DCB	0x55
	DCB	0x2
	DCB	0x33
	DCB	0x58
	DCB	0x44
	DCB	0x33
	DCB	0x59
	DCB	0x44
	DCB	0x33
	DCB	0x0
	DCB	0x13
	DCB	0x33
	DCB	0x67
	DCB	0x23
	DCB	0x33
	DCB	0x68
	DCB	0xbb
	DCB	0x33
	DCB	0x69
	DCB	0xd6
	DCB	0x33
	DCB	0x6a
	DCB	0x2a
	DCB	0x33
	DCB	0x6b
	DCB	0x7
	DCB	0x33
	DCB	0x6c
	DCB	0x0
	DCB	0x33
	DCB	0x6d
	DCB	0x23
	DCB	0x33
	DCB	0x6e
	DCB	0xc3
	DCB	0x33
	DCB	0x6f
	DCB	0xde
	DCB	0x33
	DCB	0x70
	DCB	0x2b
	DCB	0x33
	DCB	0x71
	DCB	0x7
	DCB	0x33
	DCB	0x72
	DCB	0x0
	DCB	0x33
	DCB	0x73
	DCB	0x23
	DCB	0x33
	DCB	0x74
	DCB	0x9e
	DCB	0x33
	DCB	0x75
	DCB	0xd6
	DCB	0x33
	DCB	0x76
	DCB	0x29
	DCB	0x33
	DCB	0x77
	DCB	0x7
	DCB	0x33
	DCB	0x78
	DCB	0x0
	DCB	0x33
	DCB	0x2a
	DCB	0x1d
	DCB	0x33
	DCB	0x1b
	DCB	0x8
	DCB	0x33
	DCB	0x1c
	DCB	0x16
	DCB	0x33
	DCB	0x1d
	DCB	0x2d
	DCB	0x33
	DCB	0x1e
	DCB	0x54
	DCB	0x33
	DCB	0x1f
	DCB	0x66
	DCB	0x33
	DCB	0x20
	DCB	0x73
	DCB	0x33
	DCB	0x21
	DCB	0x80
	DCB	0x33
	DCB	0x22
	DCB	0x8c
	DCB	0x33
	DCB	0x23
	DCB	0x95
	DCB	0x33
	DCB	0x24
	DCB	0x9d
	DCB	0x33
	DCB	0x25
	DCB	0xac
	DCB	0x33
	DCB	0x26
	DCB	0xb8
	DCB	0x33
	DCB	0x27
	DCB	0xcc
	DCB	0x33
	DCB	0x28
	DCB	0xdd
	DCB	0x33
	DCB	0x29
	DCB	0xee
	DCB	0x33
	DCB	0x2e
	DCB	0x4
	DCB	0x33
	DCB	0x2f
	DCB	0x6
	DCB	0x33
	DCB	0x31
	DCB	0x3
|?OV3640_reg_preview@@3PAY02EA| DCB 0x30		; OV3640_reg_preview
	DCB	0x12
	DCB	0x10
	DCB	0x30
	DCB	0x23
	DCB	0x6
	DCB	0x30
	DCB	0x26
	DCB	0x3
	DCB	0x30
	DCB	0x27
	DCB	0x4
	DCB	0x30
	DCB	0x2a
	DCB	0x3
	DCB	0x30
	DCB	0x2b
	DCB	0x10
	DCB	0x30
	DCB	0x75
	DCB	0x24
	DCB	0x30
	DCB	0xd
	DCB	0x1
	DCB	0x30
	DCB	0xd7
	DCB	0x90
	DCB	0x30
	DCB	0x69
	DCB	0x4
	DCB	0x30
	DCB	0x3e
	DCB	0x0
	DCB	0x30
	DCB	0x3f
	DCB	0xc0
	DCB	0x33
	DCB	0x2
	DCB	0xef
	DCB	0x33
	DCB	0x5f
	DCB	0x34
	DCB	0x33
	DCB	0x60
	DCB	0xc
	DCB	0x33
	DCB	0x61
	DCB	0x4
	DCB	0x33
	DCB	0x62
	DCB	0x34
	DCB	0x33
	DCB	0x63
	DCB	0x8
	DCB	0x33
	DCB	0x64
	DCB	0x4
	DCB	0x34
	DCB	0x3
	DCB	0x42
	DCB	0x30
	DCB	0x88
	DCB	0x4
	DCB	0x30
	DCB	0x89
	DCB	0x0
	DCB	0x30
	DCB	0x8a
	DCB	0x3
	DCB	0x30
	DCB	0x8b
	DCB	0x0
	DCB	0x30
	DCB	0xe
	DCB	0x32
	DCB	0x30
	DCB	0xf
	DCB	0x21
	DCB	0x30
	DCB	0x10
	DCB	0x20
	DCB	0x30
	DCB	0x11
	DCB	0x1
	DCB	0x30
	DCB	0x4c
	DCB	0x82
	DCB	0x33
	DCB	0x2
	DCB	0xef
	DCB	0x33
	DCB	0x5f
	DCB	0x34
	DCB	0x33
	DCB	0x60
	DCB	0xc
	DCB	0x33
	DCB	0x61
	DCB	0x4
	DCB	0x33
	DCB	0x62
	DCB	0x12
	DCB	0x33
	DCB	0x63
	DCB	0x88
	DCB	0x33
	DCB	0x64
	DCB	0xe4
	DCB	0x34
	DCB	0x3
	DCB	0x42
	DCB	0x30
	DCB	0x88
	DCB	0x12
	DCB	0x30
	DCB	0x89
	DCB	0x80
	DCB	0x30
	DCB	0x8a
	DCB	0x1
	DCB	0x30
	DCB	0x8b
	DCB	0xe0
	DCB	0x30
	DCB	0x4c
	DCB	0x85
	%	2
|?OV3640_reg_capture@@3PAY02EA| DCB 0x30		; OV3640_reg_capture
	DCB	0x12
	DCB	0x0
	DCB	0x30
	DCB	0x20
	DCB	0x1
	DCB	0x30
	DCB	0x21
	DCB	0x1d
	DCB	0x30
	DCB	0x22
	DCB	0x0
	DCB	0x30
	DCB	0x23
	DCB	0xa
	DCB	0x30
	DCB	0x24
	DCB	0x8
	DCB	0x30
	DCB	0x25
	DCB	0x18
	DCB	0x30
	DCB	0x26
	DCB	0x6
	DCB	0x30
	DCB	0x27
	DCB	0xc
	DCB	0x30
	DCB	0x2a
	DCB	0x6
	DCB	0x30
	DCB	0x2b
	DCB	0x20
	DCB	0x30
	DCB	0x75
	DCB	0x44
	DCB	0x30
	DCB	0xd
	DCB	0x0
	DCB	0x30
	DCB	0xd7
	DCB	0x10
	DCB	0x30
	DCB	0x69
	DCB	0x44
	DCB	0x30
	DCB	0x3e
	DCB	0x1
	DCB	0x30
	DCB	0x3f
	DCB	0x80
	DCB	0x33
	DCB	0x2
	DCB	0xcf
	DCB	0x33
	DCB	0x5f
	DCB	0x68
	DCB	0x33
	DCB	0x60
	DCB	0x18
	DCB	0x33
	DCB	0x61
	DCB	0xc
	DCB	0x33
	DCB	0x62
	DCB	0x68
	DCB	0x33
	DCB	0x63
	DCB	0x8
	DCB	0x33
	DCB	0x64
	DCB	0x4
	DCB	0x33
	DCB	0x66
	DCB	0x10
	DCB	0x34
	DCB	0x3
	DCB	0x42
	DCB	0x30
	DCB	0x88
	DCB	0x8
	DCB	0x30
	DCB	0x89
	DCB	0x0
	DCB	0x30
	DCB	0x8a
	DCB	0x6
	DCB	0x30
	DCB	0x8b
	DCB	0x0
	DCB	0x30
	DCB	0xe
	DCB	0x39
	DCB	0x30
	DCB	0xf
	DCB	0x21
	DCB	0x30
	DCB	0x10
	DCB	0x20
	DCB	0x30
	DCB	0x11
	DCB	0x1
	DCB	0x30
	DCB	0x4c
	DCB	0x81
	DCB	0x33
	DCB	0x2d
	DCB	0x77
	EXPORT	|?IICInit@@YAHXZ|			; IICInit
	EXPORT	|??_C@_1EC@GKBMNPIA@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAI?$AAI?$AAC?$AA_?$AAS?$AAE?$AAT?$AA_?$AAD?$AAE?$AAL?$AAA?$AAY?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@MEPKEDEK@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAI?$AAI?$AAC?$AA_?$AAS?$AAE?$AAT?$AA_?$AAC?$AAL?$AAO?$AAC?$AAK?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@HOFEOJNB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAi?$AAc?$AA0?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@HHLBECPN@?$AAI?$AAI?$AAC?$AA0?$AA?3?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|DeviceIoControl|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|GetLastError|
	IMPORT	|CreateFileW|

  00001			 AREA	 |.bss|, NOINIT
|hI2C|	%	0x4
|hI2C|	%	0x4
; File d:\wince600\platform\smdk6410\src\drivers\camera\ov9650_module\ov9650_module.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37411| DCD	|$LN16@IICInit|
	DCD	0x40004502

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@GKBMNPIA@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAI?$AAI?$AAC?$AA_?$AAS?$AAE?$AAT?$AA_?$AAD?$AAE?$AAL?$AAA?$AAY?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "I"
	DCB	0x0, "I", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "L", 0x0, "A", 0x0, "Y"
	DCB	0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@MEPKEDEK@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAI?$AAI?$AAC?$AA_?$AAS?$AAE?$AAT?$AA_?$AAC?$AAL?$AAO?$AAC?$AAK?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "I"
	DCB	0x0, "I", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "C", 0x0, "L", 0x0, "O", 0x0, "C", 0x0, "K"
	DCB	0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@HOFEOJNB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAi?$AAc?$AA0?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "i"
	DCB	0x0, "i", 0x0, "c", 0x0, "0", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@HHLBECPN@?$AAI?$AAI?$AAC?$AA0?$AA?3?$AA?$AA@| DCB "I", 0x0, "I", 0x0
	DCB	"C", 0x0, "0", 0x0, ":", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IICInit@@YAHXZ| PROC			; IICInit

; 64   : {

  00000		 |$LN16@IICInit|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M37408|
  00008	e3a03c0b	 mov         r3, #0xB, 24

; 65   : 	DWORD   dwErr = ERROR_SUCCESS,bytes;
; 66   : 	UINT32  IICClock = 3000;
; 67   : 	UINT32  uiIICDelay;
; 68   : 	// Initialize IIC1
; 69   : 	hI2C = CreateFile(_T("IIC0:"), GENERIC_READ|GENERIC_WRITE,
; 70   : 						FILE_SHARE_READ|FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, 0);

  0000c	e59f00fc	 ldr         r0, [pc, #0xFC]
  00010	e38330b8	 orr         r3, r3, #0xB8
  00014	e58d3010	 str         r3, [sp, #0x10]
  00018	e3a0e003	 mov         lr, #3
  0001c	e3a05000	 mov         r5, #0
  00020	e3a03000	 mov         r3, #0
  00024	e3a02003	 mov         r2, #3
  00028	e3a01103	 mov         r1, #3, 2
  0002c	e58d5008	 str         r5, [sp, #8]
  00030	e58d5004	 str         r5, [sp, #4]
  00034	e58de000	 str         lr, [sp]
  00038	eb000000	 bl          CreateFileW
  0003c	e59f40c8	 ldr         r4, [pc, #0xC8]

; 71   : 	if(INVALID_HANDLE_VALUE == hI2C)

  00040	e3700001	 cmn         r0, #1
  00044	e5840000	 str         r0, [r4]
  00048	1a000005	 bne         |$LN3@IICInit|

; 72   : 	{
; 73   : 		dwErr = GetLastError();

  0004c	eb000000	 bl          GetLastError
  00050	e1a01000	 mov         r1, r0

; 74   : 		RETAILMSG(OV3640_ERROR, (_T("Error %d opening device iic0!\r\n"), dwErr));

  00054	e59f00ac	 ldr         r0, [pc, #0xAC]
  00058		 |$LN13@IICInit|
  00058	eb000000	 bl          NKDbgPrintfW

; 75   : 		return FALSE;

  0005c	e3a00000	 mov         r0, #0
  00060	ea000023	 b           |$LN1@IICInit|
  00064		 |$LN3@IICInit|
  00064	e3a03701	 mov         r3, #1, 14

; 76   : 	}
; 77   : 	if (!DeviceIoControl(hI2C,
; 78   :                           IOCTL_IIC_SET_CLOCK, 
; 79   :                           &IICClock, sizeof(UINT32), 
; 80   :                           NULL, 0,
; 81   :                           &bytes, NULL) ) 

  00068	e3831008	 orr         r1, r3, #8
  0006c	e28de014	 add         lr, sp, #0x14
  00070	e3a03004	 mov         r3, #4
  00074	e28d2010	 add         r2, sp, #0x10
  00078	e58d500c	 str         r5, [sp, #0xC]
  0007c	e58de008	 str         lr, [sp, #8]
  00080	e58d5004	 str         r5, [sp, #4]
  00084	e58d5000	 str         r5, [sp]
  00088	eb000000	 bl          DeviceIoControl
  0008c	e3500000	 cmp         r0, #0
  00090	1a000003	 bne         |$LN2@IICInit|

; 82   : 	{
; 83   : 		dwErr = GetLastError();

  00094	eb000000	 bl          GetLastError
  00098	e1a01000	 mov         r1, r0

; 84   : 		RETAILMSG(OV3640_ERROR,(TEXT("IOCTL_IIC_SET_CLOCK ERROR: %u \r\n"), dwErr));

  0009c	e59f0060	 ldr         r0, [pc, #0x60]

; 85   : 		return FALSE;

  000a0	eaffffec	 b           |$LN13@IICInit|
  000a4		 |$LN2@IICInit|

; 86   : 	}       
; 87   : 	uiIICDelay = Clk_0;
; 88   : 	if ( !DeviceIoControl(hI2C,
; 89   :                       IOCTL_IIC_SET_DELAY, 
; 90   :                       &uiIICDelay, sizeof(UINT32), 
; 91   :                       NULL, 0,
; 92   :                       &bytes, NULL) )

  000a4	e5940000	 ldr         r0, [r4]
  000a8	e3a03701	 mov         r3, #1, 14
  000ac	e3831020	 orr         r1, r3, #0x20
  000b0	e3a04000	 mov         r4, #0
  000b4	e28de014	 add         lr, sp, #0x14
  000b8	e3a03004	 mov         r3, #4
  000bc	e28d2018	 add         r2, sp, #0x18
  000c0	e58d4018	 str         r4, [sp, #0x18]
  000c4	e58d500c	 str         r5, [sp, #0xC]
  000c8	e58de008	 str         lr, [sp, #8]
  000cc	e58d5004	 str         r5, [sp, #4]
  000d0	e58d5000	 str         r5, [sp]
  000d4	eb000000	 bl          DeviceIoControl
  000d8	e3500000	 cmp         r0, #0
  000dc	1a000003	 bne         |$LN12@IICInit|

; 93   :     	{
; 94   :         	dwErr = GetLastError();

  000e0	eb000000	 bl          GetLastError
  000e4	e1a01000	 mov         r1, r0

; 95   :         	RETAILMSG(OV3640_ERROR,(TEXT("IOCTL_IIC_SET_DELAY ERROR: %u \r\n"), dwErr));

  000e8	e59f0010	 ldr         r0, [pc, #0x10]

; 96   :         	return FALSE;

  000ec	eaffffd9	 b           |$LN13@IICInit|
  000f0		 |$LN12@IICInit|
  000f0	e59d0018	 ldr         r0, [sp, #0x18]
  000f4		 |$LN1@IICInit|

; 97   :     	}
; 98   : 
; 99   : }

  000f4	e28dd01c	 add         sp, sp, #0x1C
  000f8	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000fc	e12fff1e	 bx          lr
  00100		 |$LN17@IICInit|
  00100		 |$LN18@IICInit|
  00100	00000000	 DCD         |??_C@_1EC@GKBMNPIA@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAI?$AAI?$AAC?$AA_?$AAS?$AAE?$AAT?$AA_?$AAD?$AAE?$AAL?$AAA?$AAY?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6@|
  00104		 |$LN19@IICInit|
  00104	00000000	 DCD         |??_C@_1EC@MEPKEDEK@?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAI?$AAI?$AAC?$AA_?$AAS?$AAE?$AAT?$AA_?$AAC?$AAL?$AAO?$AAC?$AAK?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAu?$AA?5?$AA?$AN?$AA?6@|
  00108		 |$LN20@IICInit|
  00108	00000000	 DCD         |??_C@_1EA@HOFEOJNB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAi?$AAc?$AA0?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  0010c		 |$LN21@IICInit|
  0010c	00000000	 DCD         |hI2C|
  00110		 |$LN22@IICInit|
  00110	00000000	 DCD         |??_C@_1M@HHLBECPN@?$AAI?$AAI?$AAC?$AA0?$AA?3?$AA?$AA@|
  00114		 |$M37409|

			 ENDP  ; |?IICInit@@YAHXZ|, IICInit

	EXPORT	|?ModuleInit@@YAHXZ|			; ModuleInit

  00009			 AREA	 |.bss|, NOINIT
|gModuleDesc| %	0x1c
|gModuleDesc| %	0x1c

  00000			 AREA	 |.pdata|, PDATA
|$T37430| DCD	|$LN9@ModuleInit|
	DCD	0x40002401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ModuleInit@@YAHXZ| PROC		; ModuleInit

; 102  : {

  00000		 |$LN9@ModuleInit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37427|

; 103  : 	RETAILMSG(OV3640_DEBUG,(TEXT("ModuleInit++\r\n")));
; 104  : 
; 105  : 	IICInit();

  00004	eb000000	 bl          |?IICInit@@YAHXZ|

; 106  :     
; 107  : 	g_ucSlaveID = OV3640_SLAVE_ID;

  00008	e59f207c	 ldr         r2, [pc, #0x7C]

; 108  : 	gModuleDesc.Order422 = DEFAULT_MODULE_YUVORDER;

  0000c	e3a03000	 mov         r3, #0

; 109  : 	gModuleDesc.ITUXXX = DEFAULT_MODULE_ITUXXX;

  00010	e3a01001	 mov         r1, #1
  00014	e5c23002	 strb        r3, [r2, #2]

; 110  : 	gModuleDesc.SourceHSize = DEFAULT_MODULE_HSIZE;

  00018	e3a03b02	 mov         r3, #2, 22
  0001c	e5c21000	 strb        r1, [r2]
  00020	e5823008	 str         r3, [r2, #8]

; 111  : 	gModuleDesc.SourceVSize = DEFAULT_MODULE_VSIZE;

  00024	e3a03c06	 mov         r3, #6, 24

; 112  : 	gModuleDesc.SourceHOffset = DEFAULT_MODULE_HOFFSET;

  00028	e3a01000	 mov         r1, #0
  0002c	e582300c	 str         r3, [r2, #0xC]

; 113  : 	gModuleDesc.SourceVOffset = DEFAULT_MODULE_VOFFSET;
; 114  : 	gModuleDesc.UVOffset = DEFAULT_MODULE_UVOFFSET;
; 115  : 	gModuleDesc.Clock = DEFAULT_MODULE_CLOCK;

  00030	e5821010	 str         r1, [r2, #0x10]
  00034	e3a01000	 mov         r1, #0
  00038	e59f3048	 ldr         r3, [pc, #0x48]
  0003c	e5821014	 str         r1, [r2, #0x14]
  00040	e3a01000	 mov         r1, #0
  00044	e5c21001	 strb        r1, [r2, #1]
  00048	e5823018	 str         r3, [r2, #0x18]

; 116  : 	gModuleDesc.Codec = DEFAULT_MODULE_CODEC;

  0004c	e3a03001	 mov         r3, #1
  00050	e5c23003	 strb        r3, [r2, #3]

; 117  : 	gModuleDesc.HighRst = DEFAULT_MODULE_HIGHRST;

  00054	e3a03000	 mov         r3, #0
  00058	e5c23004	 strb        r3, [r2, #4]

; 118  : 	gModuleDesc.InvPCLK = DEFAULT_MODULE_INVPCLK;

  0005c	e3a03000	 mov         r3, #0
  00060	e5c23005	 strb        r3, [r2, #5]

; 119  : 	gModuleDesc.InvVSYNC = DEFAULT_MODULE_INVVSYNC;

  00064	e3a03000	 mov         r3, #0
  00068	e5c23006	 strb        r3, [r2, #6]

; 120  : 	gModuleDesc.InvHREF = DEFAULT_MODULE_INVHREF;

  0006c	e3a03000	 mov         r3, #0
  00070	e3a01078	 mov         r1, #0x78
  00074	e5c23007	 strb        r3, [r2, #7]
  00078	e5c2101c	 strb        r1, [r2, #0x1C]

; 121  :     
; 122  : 
; 123  : 	RETAILMSG(OV3640_DEBUG,(TEXT("ModuleInit--\r\n")));
; 124  : 	return TRUE;

  0007c	e3a00001	 mov         r0, #1

; 125  : }

  00080	e49de004	 ldr         lr, [sp], #4
  00084	e12fff1e	 bx          lr
  00088		 |$LN10@ModuleInit|
  00088		 |$LN11@ModuleInit|
  00088	0112a880	 DCD         0x112a880
  0008c		 |$LN12@ModuleInit|
  0008c	00000000	 DCD         |gModuleDesc|
  00090		 |$M37428|

			 ENDP  ; |?ModuleInit@@YAHXZ|, ModuleInit

	EXPORT	|?IICDeinit@@YAXXZ|			; IICDeinit
	IMPORT	|CloseHandle|

  00000			 AREA	 |.pdata|, PDATA
|$T37440| DCD	|$LN5@IICDeinit|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IICDeinit@@YAXXZ| PROC		; IICDeinit

; 129  : {

  00000		 |$LN5@IICDeinit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37437|

; 130  : 	CloseHandle(hI2C);

  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          CloseHandle

; 131  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@IICDeinit|
  00018		 |$LN7@IICDeinit|
  00018	00000000	 DCD         |hI2C|
  0001c		 |$M37438|

			 ENDP  ; |?IICDeinit@@YAXXZ|, IICDeinit

	EXPORT	|?ModuleDeinit@@YAXXZ|			; ModuleDeinit

  00000			 AREA	 |.pdata|, PDATA
|$T37449| DCD	|$LN5@ModuleDein|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ModuleDeinit@@YAXXZ| PROC		; ModuleDeinit

; 134  : {    

  00000		 |$LN5@ModuleDein|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37446|

; 135  :     CloseHandle(hI2C);

  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          CloseHandle

; 136  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@ModuleDein|
  00018		 |$LN7@ModuleDein|
  00018	00000000	 DCD         |hI2C|
  0001c		 |$M37447|

			 ENDP  ; |?ModuleDeinit@@YAXXZ|, ModuleDeinit

	EXPORT	|?HW_WriteRegisters@@YAKPAEK@Z|		; HW_WriteRegisters
	IMPORT	|Sleep|

  00000			 AREA	 |.pdata|, PDATA
|$T37471| DCD	|$LN15@HW_WriteRe|
	DCD	0x40002102
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HW_WriteRegisters@@YAKPAEK@Z| PROC	; HW_WriteRegisters

; 343  : {

  00000		 |$LN15@HW_WriteRe|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M37468|
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 344  :     DWORD dwErr=0;
; 345  :     DWORD bytes;
; 346  :     IIC_IO_DESC IIC_Data;
; 347  :     
; 348  :     RETAILMSG(0,(TEXT("HW_WriteRegisters++ \r\n")));    
; 349  :     
; 350  :     IIC_Data.SlaveAddress = CAMERA_WRITE;
; 351  :     IIC_Data.Count    = nRegs;
; 352  :     IIC_Data.Data = pBuff;
; 353  :     
; 354  :     // use iocontrol to write
; 355  :     if ( !DeviceIoControl(hI2C,
; 356  :                           IOCTL_IIC_WRITE, 
; 357  :                           &IIC_Data, sizeof(IIC_IO_DESC), 
; 358  :                           NULL, 0,
; 359  :                           &bytes, NULL) ) 

  00010	e59f3068	 ldr         r3, [pc, #0x68]
  00014	e3a01701	 mov         r1, #1, 14
  00018	e3a07078	 mov         r7, #0x78
  0001c	e5930000	 ldr         r0, [r3]
  00020	e28de010	 add         lr, sp, #0x10
  00024	e3a08000	 mov         r8, #0
  00028	e3a0300c	 mov         r3, #0xC
  0002c	e28d2014	 add         r2, sp, #0x14
  00030	e3811004	 orr         r1, r1, #4
  00034	e3a06000	 mov         r6, #0
  00038	e5cd7014	 strb        r7, [sp, #0x14]
  0003c	e58d401c	 str         r4, [sp, #0x1C]
  00040	e58d5018	 str         r5, [sp, #0x18]
  00044	e58d800c	 str         r8, [sp, #0xC]
  00048	e58de008	 str         lr, [sp, #8]
  0004c	e58d8004	 str         r8, [sp, #4]
  00050	e58d8000	 str         r8, [sp]
  00054	eb000000	 bl          DeviceIoControl
  00058	e3500000	 cmp         r0, #0
  0005c	1a000001	 bne         |$LN8@HW_WriteRe|

; 360  :     {
; 361  :         dwErr = GetLastError();

  00060	eb000000	 bl          GetLastError
  00064	e1a06000	 mov         r6, r0
  00068		 |$LN8@HW_WriteRe|

; 362  :         RETAILMSG(0,(TEXT("IOCTL_IIC_WRITE ERROR: %u \r\n"), dwErr));
; 363  :     }   
; 364  : 
; 365  :     if ( dwErr ) {
; 366  :         RETAILMSG(0, (TEXT("I2CWrite ERROR: %u \r\n"), dwErr));
; 367  :     }            
; 368  :     RETAILMSG(0,(TEXT("HW_WriteRegisters-- \r\n")));    
; 369  : 
; 370  : Sleep(2);

  00068	e3a00002	 mov         r0, #2
  0006c	eb000000	 bl          Sleep

; 371  :     return dwErr;
; 372  : }

  00070	e1a00006	 mov         r0, r6
  00074	e28dd020	 add         sp, sp, #0x20
  00078	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$LN16@HW_WriteRe|
  00080		 |$LN17@HW_WriteRe|
  00080	00000000	 DCD         |hI2C|
  00084		 |$M37469|

			 ENDP  ; |?HW_WriteRegisters@@YAKPAEK@Z|, HW_WriteRegisters

	EXPORT	|?HW_ReadRegisters@@YAKPAE0K@Z|		; HW_ReadRegisters

  00000			 AREA	 |.pdata|, PDATA
|$T37493| DCD	|$LN16@HW_ReadReg|
	DCD	0x40002802
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HW_ReadRegisters@@YAKPAE0K@Z| PROC	; HW_ReadRegisters

; 380  : {

  00000		 |$LN16@HW_ReadReg|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd02c	 sub         sp, sp, #0x2C
  00008		 |$M37490|
  00008	e1a05001	 mov         r5, r1
  0000c	e1a06000	 mov         r6, r0

; 381  :     DWORD dwErr=0;
; 382  :     DWORD bytes;
; 383  :     IIC_IO_DESC IIC_AddressData, IIC_Data;
; 384  : 
; 385  : 	RETAILMSG(0,(TEXT("HW_ReadRegisters++ \r\n"))); 
; 386  : 	
; 387  :     IIC_AddressData.SlaveAddress = CAMERA_WRITE;
; 388  :     IIC_AddressData.Data = pStartReg;
; 389  :     IIC_AddressData.Count = 2;
; 390  :     
; 391  :     IIC_Data.SlaveAddress = CAMERA_READ;
; 392  :     IIC_Data.Data = pBuff;
; 393  :     IIC_Data.Count = 1;
; 394  :     
; 395  :     // use iocontrol to read    
; 396  :     if ( !DeviceIoControl(hI2C,
; 397  :                           IOCTL_IIC_READ, 
; 398  :                           &IIC_AddressData, sizeof(IIC_IO_DESC), 
; 399  :                           &IIC_Data, sizeof(IIC_IO_DESC),
; 400  :                           &bytes, NULL) ) 

  00010	e59f3084	 ldr         r3, [pc, #0x84]
  00014	e28de010	 add         lr, sp, #0x10
  00018	e58d5018	 str         r5, [sp, #0x18]
  0001c	e5930000	 ldr         r0, [r3]
  00020	e58de008	 str         lr, [sp, #8]
  00024	e3a09078	 mov         r9, #0x78
  00028	e3a08079	 mov         r8, #0x79
  0002c	e3a0a001	 mov         r10, #1
  00030	e3a0b000	 mov         r11, #0
  00034	e28d4020	 add         r4, sp, #0x20
  00038	e3a05002	 mov         r5, #2
  0003c	e3a0e00c	 mov         lr, #0xC
  00040	e3a0300c	 mov         r3, #0xC
  00044	e28d2014	 add         r2, sp, #0x14
  00048	e3a01701	 mov         r1, #1, 14
  0004c	e3a07000	 mov         r7, #0
  00050	e5cd9014	 strb        r9, [sp, #0x14]
  00054	e58d501c	 str         r5, [sp, #0x1C]
  00058	e5cd8020	 strb        r8, [sp, #0x20]
  0005c	e58d6024	 str         r6, [sp, #0x24]
  00060	e58da028	 str         r10, [sp, #0x28]
  00064	e58db00c	 str         r11, [sp, #0xC]
  00068	e58de004	 str         lr, [sp, #4]
  0006c	e58d4000	 str         r4, [sp]
  00070	eb000000	 bl          DeviceIoControl
  00074	e3500000	 cmp         r0, #0
  00078	1a000001	 bne         |$LN9@HW_ReadReg|

; 401  :     {
; 402  :         dwErr = GetLastError();

  0007c	eb000000	 bl          GetLastError
  00080	e1a07000	 mov         r7, r0
  00084		 |$LN9@HW_ReadReg|

; 403  :         RETAILMSG(0,(TEXT("IOCTL_IIC_WRITE ERROR: %u \r\n"), dwErr));
; 404  :     }   
; 405  : 
; 406  :     
; 407  :     if ( !dwErr ) {
; 408  : 
; 409  : 
; 410  :     } else {        
; 411  :         RETAILMSG(0,(TEXT("I2CRead ERROR: %u \r\n"), dwErr));
; 412  :     }            
; 413  : 
; 414  : 	RETAILMSG(0,(TEXT("HW_ReadRegisters-- \r\n"))); 
; 415  : 
; 416  : 	Sleep(2);

  00084	e3a00002	 mov         r0, #2
  00088	eb000000	 bl          Sleep

; 417  :     return dwErr;
; 418  : }

  0008c	e1a00007	 mov         r0, r7
  00090	e28dd02c	 add         sp, sp, #0x2C
  00094	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00098	e12fff1e	 bx          lr
  0009c		 |$LN17@HW_ReadReg|
  0009c		 |$LN18@HW_ReadReg|
  0009c	00000000	 DCD         |hI2C|
  000a0		 |$M37491|

			 ENDP  ; |?HW_ReadRegisters@@YAKPAE0K@Z|, HW_ReadRegisters

	EXPORT	|?ModuleGetFormat@@YAXAAU_MODULE_DESCRIPTOR@@@Z| ; ModuleGetFormat
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T37504| DCD	|$LN5@ModuleGetF|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ModuleGetFormat@@YAXAAU_MODULE_DESCRIPTOR@@@Z| PROC ; ModuleGetFormat

; 422  : {

  00000		 |$LN5@ModuleGetF|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37501|

; 423  :     memcpy(&outModuleDesc, &gModuleDesc, sizeof(MODULE_DESCRIPTOR));

  00004	e59f100c	 ldr         r1, [pc, #0xC]
  00008	e3a0201c	 mov         r2, #0x1C
  0000c	eb000000	 bl          memcpy

; 424  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@ModuleGetF|
  00018		 |$LN7@ModuleGetF|
  00018	00000000	 DCD         |gModuleDesc|
  0001c		 |$M37502|

			 ENDP  ; |?ModuleGetFormat@@YAXAAU_MODULE_DESCRIPTOR@@@Z|, ModuleGetFormat

	EXPORT	|?ModuleSetImageSize@@YAHH@Z|		; ModuleSetImageSize

  00000			 AREA	 |.pdata|, PDATA
|$T37515| DCD	|$LN5@ModuleSetI|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ModuleSetImageSize@@YAHH@Z| PROC	; ModuleSetImageSize

; 427  : {

  00000		 |$LN5@ModuleSetI|
  00000		 |$M37512|

; 428  : 
; 429  :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 430  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37513|

			 ENDP  ; |?ModuleSetImageSize@@YAHH@Z|, ModuleSetImageSize

	EXPORT	|?ModuleWriteBlock@@YAHXZ|		; ModuleWriteBlock
	EXPORT	|??_C@_1CI@GGEAPFIP@?$AAs?$AAe?$AAn?$AAs?$AAo?$AAr?$AA_?$AAs?$AAv?$AAg?$AAa?$AA_?$AAN?$AAu?$AAm?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@HKFMGEIM@?$AA?$AN?$AA?6?$AAI?$AAI?$AAC?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA3?$AA0?$AA7?$AA3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@EEBFKHDN@?$AAs?$AAe?$AAn?$AAs?$AAo?$AAr?$AA_?$AA7?$AA2?$AA0?$AAp?$AA_?$AAN?$AAu?$AAm?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@LKJCFKF@?$AAs?$AAe?$AAn?$AAs?$AAo?$AAr?$AA_?$AAi?$AAn?$AAi?$AAt?$AA_?$AAN?$AAu?$AAm?$AA?5?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@CANDBJLE@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAV?$AAE?$AAR?$AA_?$AAR?$AAE?$AAG?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@LBNCMCND@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAV?$AAE?$AAR?$AA_?$AAR?$AAE?$AAG?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@GALICEFE@?$AAI?$AAI?$AAC?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAv?$AAi?$AAd?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@IJNGJMA@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAP?$AAI?$AAD?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?5?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@NBOGDNAD@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAP?$AAI?$AAD?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@LPMNJIMA@?$AA?$CF?$AAx?$AA?0?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@GOMEJINB@?$AAI?$AAI?$AAC?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp?$AAi?$AAd?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37566| DCD	|$LN58@ModuleWrit|
	DCD	0x40007702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@GGEAPFIP@?$AAs?$AAe?$AAn?$AAs?$AAo?$AAr?$AA_?$AAs?$AAv?$AAg?$AAa?$AA_?$AAN?$AAu?$AAm?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "_"
	DCB	0x0, "s", 0x0, "v", 0x0, "g", 0x0, "a", 0x0, "_", 0x0, "N"
	DCB	0x0, "u", 0x0, "m", 0x0, " ", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@HKFMGEIM@?$AA?$AN?$AA?6?$AAI?$AAI?$AAC?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA3?$AA0?$AA7?$AA3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "I", 0x0, "I", 0x0, "C", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "3", 0x0, "0", 0x0, "7", 0x0, "3", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@EEBFKHDN@?$AAs?$AAe?$AAn?$AAs?$AAo?$AAr?$AA_?$AA7?$AA2?$AA0?$AAp?$AA_?$AAN?$AAu?$AAm?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "_"
	DCB	0x0, "7", 0x0, "2", 0x0, "0", 0x0, "p", 0x0, "_", 0x0, "N"
	DCB	0x0, "u", 0x0, "m", 0x0, " ", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@LKJCFKF@?$AAs?$AAe?$AAn?$AAs?$AAo?$AAr?$AA_?$AAi?$AAn?$AAi?$AAt?$AA_?$AAN?$AAu?$AAm?$AA?5?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "_"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "_", 0x0, "N"
	DCB	0x0, "u", 0x0, "m", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@| DCB ".", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@CANDBJLE@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAV?$AAE?$AAR?$AA_?$AAR?$AAE?$AAG?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "O", 0x0, "V"
	DCB	0x0, "3", 0x0, "6", 0x0, "4", 0x0, "0", 0x0, "_", 0x0, "V"
	DCB	0x0, "E", 0x0, "R", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G"
	DCB	0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, "!", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@LBNCMCND@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAV?$AAE?$AAR?$AA_?$AAR?$AAE?$AAG?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "O", 0x0, "V"
	DCB	0x0, "3", 0x0, "6", 0x0, "4", 0x0, "0", 0x0, "_", 0x0, "V"
	DCB	0x0, "E", 0x0, "R", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G"
	DCB	0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, "s", 0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l"
	DCB	0x0, "y", 0x0, "!", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@GALICEFE@?$AAI?$AAI?$AAC?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAv?$AAi?$AAd?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "I", 0x0, "C", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "v", 0x0, "i", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@IJNGJMA@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAP?$AAI?$AAD?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?5?$AA?$AN?$AA?6@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "O", 0x0, "V"
	DCB	0x0, "3", 0x0, "6", 0x0, "4", 0x0, "0", 0x0, "_", 0x0, "P"
	DCB	0x0, "I", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, "!", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@NBOGDNAD@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAP?$AAI?$AAD?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "O", 0x0, "V"
	DCB	0x0, "3", 0x0, "6", 0x0, "4", 0x0, "0", 0x0, "_", 0x0, "P"
	DCB	0x0, "I", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "c"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "f", 0x0, "u"
	DCB	0x0, "l", 0x0, "l", 0x0, "y", 0x0, "!", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@LPMNJIMA@?$AA?$CF?$AAx?$AA?0?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "x", 0x0, ",", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@GOMEJINB@?$AAI?$AAI?$AAC?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp?$AAi?$AAd?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "I", 0x0, "C", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "p", 0x0, "i", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ModuleWriteBlock@@YAHXZ| PROC	; ModuleWriteBlock

; 139  : {

  00000		 |$LN58@ModuleWrit|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37563|

; 140  :     int i;
; 141  :     UCHAR BUF=0;
; 142  :     UCHAR version[2];
; 143  : 
; 144  : 	UCHAR tem[3];
; 145  : 
; 146  : //	UCHAR pidAddr,vidAddr;
; 147  : 	
; 148  :     RETAILMSG(OV3640_DEBUG,(TEXT("ModuleWriteBlock++ \r\n")));
; 149  : 
; 150  : 	RETAILMSG(1, (TEXT("%x,%x\r\n"),IOCTL_IIC_READ,IOCTL_IIC_WRITE));

  00008	e59f01c8	 ldr         r0, [pc, #0x1C8]
  0000c	e3a03701	 mov         r3, #1, 14
  00010	e3a0e000	 mov         lr, #0
  00014	e3832004	 orr         r2, r3, #4
  00018	e3a01701	 mov         r1, #1, 14
  0001c	e5cde000	 strb        lr, [sp]
  00020	eb000000	 bl          NKDbgPrintfW

; 151  : 	
; 152  : 		 // Read OV3640 PID
; 153  : 	version[0] = (OV3640_PID_REG & 0xff00)>>8;
; 154  : 	version[1] = OV3640_PID_REG & 0xff;

  00024	e3a0200a	 mov         r2, #0xA
  00028	e5cd2003	 strb        r2, [sp, #3]
  0002c	e3a03030	 mov         r3, #0x30

; 155  : //	pidAddr = 0x0a;
; 156  : 	HW_ReadRegisters(&BUF, version, 2);

  00030	e3a02002	 mov         r2, #2
  00034	e28d1002	 add         r1, sp, #2
  00038	e28d0000	 add         r0, sp, #0
  0003c	e5cd3002	 strb        r3, [sp, #2]
  00040	eb000000	 bl          |?HW_ReadRegisters@@YAKPAE0K@Z|

; 157  : 	Sleep(2);

  00044	e3a00002	 mov         r0, #2
  00048	eb000000	 bl          Sleep

; 158  : 	RETAILMSG(1, (TEXT("IIC read pid %x\r\n"),BUF));

  0004c	e5dd1000	 ldrb        r1, [sp]
  00050	e59f017c	 ldr         r0, [pc, #0x17C]
  00054	eb000000	 bl          NKDbgPrintfW

; 159  : 	if (OV3640_PID == BUF)

  00058	e5dd3000	 ldrb        r3, [sp]
  0005c	e3530056	 cmp         r3, #0x56

; 160  : 		RETAILMSG(1,(TEXT("Read OV3640_PID: 0x%x successfully! \r\n"), BUF));

  00060	059f0168	 ldreq       r0, [pc, #0x168]

; 161  : 	else
; 162  : 		RETAILMSG(OV3640_ERROR,(TEXT("Read OV3640_PID: 0x%x failed! \r\n"), BUF));

  00064	159f0160	 ldrne       r0, [pc, #0x160]
  00068	e1a01003	 mov         r1, r3
  0006c	eb000000	 bl          NKDbgPrintfW

; 163  : 	
; 164  : 	// Read OV3640 VID
; 165  : 	version[0] = (OV3640_VER_REG & 0xff00)>>8;
; 166  : 	version[1] = OV3640_VER_REG & 0xff;

  00070	e3a0200b	 mov         r2, #0xB
  00074	e5cd2003	 strb        r2, [sp, #3]
  00078	e3a03030	 mov         r3, #0x30

; 167  : //	vidAddr = 0x0b;
; 168  : 	HW_ReadRegisters(&BUF, version, 2);

  0007c	e3a02002	 mov         r2, #2
  00080	e28d1002	 add         r1, sp, #2
  00084	e28d0000	 add         r0, sp, #0
  00088	e5cd3002	 strb        r3, [sp, #2]
  0008c	eb000000	 bl          |?HW_ReadRegisters@@YAKPAE0K@Z|

; 169  : 	Sleep(2);

  00090	e3a00002	 mov         r0, #2
  00094	eb000000	 bl          Sleep

; 170  : 	RETAILMSG(1, (TEXT("IIC read vid %x\r\n"),BUF));

  00098	e5dd1000	 ldrb        r1, [sp]
  0009c	e59f0124	 ldr         r0, [pc, #0x124]
  000a0	eb000000	 bl          NKDbgPrintfW

; 171  : 	if (OV3640_VER == BUF)

  000a4	e5dd3000	 ldrb        r3, [sp]
  000a8	e3530040	 cmp         r3, #0x40

; 172  : 		RETAILMSG(1,(TEXT("Read OV3640_VER_REG: 0x%x successfully! \r\n"), BUF));

  000ac	059f0110	 ldreq       r0, [pc, #0x110]

; 173  : 	else
; 174  : 		RETAILMSG(OV3640_ERROR,(TEXT("Read OV3640_VER_REG: 0x%x failed! \r\n"), BUF));

  000b0	159f0108	 ldrne       r0, [pc, #0x108]
  000b4	e1a01003	 mov         r1, r3
  000b8	eb000000	 bl          NKDbgPrintfW

; 175  : 		
; 176  : 	
; 177  : 	HW_WriteRegisters(&OV3640_reg[0][0], 3);

  000bc	e59f40f8	 ldr         r4, [pc, #0xF8]
  000c0	e3a01003	 mov         r1, #3
  000c4	e2840e42	 add         r0, r4, #0x42, 28
  000c8	eb000000	 bl          |?HW_WriteRegisters@@YAKPAEK@Z|

; 178  : 	Sleep(10);	// delay 10ms

  000cc	e3a0000a	 mov         r0, #0xA
  000d0	eb000000	 bl          Sleep
  000d4	e1a05004	 mov         r5, r4
  000d8	e3a060ff	 mov         r6, #0xFF
  000dc		 |$LL9@ModuleWrit|

; 179  : 
; 180  :     for ( i=0;i < sensor_init_Num;i++)
; 181  :     {
; 182  : 		HW_WriteRegisters(&sensor_init_data[i][0], 3);

  000dc	e3a01003	 mov         r1, #3
  000e0	e1a00005	 mov         r0, r5
  000e4	eb000000	 bl          |?HW_WriteRegisters@@YAKPAEK@Z|

; 183  : 		RETAILMSG(1, (TEXT(".")));

  000e8	e59f00c0	 ldr         r0, [pc, #0xC0]
  000ec	eb000000	 bl          NKDbgPrintfW
  000f0	e2855003	 add         r5, r5, #3
  000f4	e2566001	 subs        r6, r6, #1
  000f8	1afffff7	 bne         |$LL9@ModuleWrit|

; 184  : 
; 185  : 		//RETAILMSG(1,(TEXT(" {0x%x ,0x%02X ,0x%02X},  \r\n"), tem[0],tem[1],tem[2]));
; 186  : 
; 187  :     }
; 188  : 	RETAILMSG(1,(TEXT("sensor_init_Num   \r\n")));

  000fc	e59f00b4	 ldr         r0, [pc, #0xB4]
  00100	eb000000	 bl          NKDbgPrintfW
  00104	e2845c03	 add         r5, r4, #3, 24
  00108	e3a06039	 mov         r6, #0x39
  0010c		 |$LL6@ModuleWrit|

; 189  :                 
; 190  : 
; 191  : 	for ( i=0;i < sensor_720p_Num;i++)
; 192  : 	{
; 193  : 		HW_WriteRegisters(&sensor_720p[i][0], 3);

  0010c	e3a01003	 mov         r1, #3
  00110	e1a00005	 mov         r0, r5
  00114	eb000000	 bl          |?HW_WriteRegisters@@YAKPAEK@Z|

; 194  : 		RETAILMSG(1, (TEXT(".")));

  00118	e59f0090	 ldr         r0, [pc, #0x90]
  0011c	eb000000	 bl          NKDbgPrintfW
  00120	e2855003	 add         r5, r5, #3
  00124	e2566001	 subs        r6, r6, #1
  00128	1afffff7	 bne         |$LL6@ModuleWrit|

; 195  : 
; 196  : 		//RETAILMSG(1,(TEXT(" {0x%x ,0x%02X ,0x%02X},  \r\n"), tem[0],tem[1],tem[2]));
; 197  : 
; 198  : 	}
; 199  : 	RETAILMSG(1,(TEXT("sensor_720p_Num  \r\n")));

  0012c	e59f0080	 ldr         r0, [pc, #0x80]
  00130	eb000000	 bl          NKDbgPrintfW
  00134	e2844e3b	 add         r4, r4, #0x3B, 28
  00138	e3a05024	 mov         r5, #0x24
  0013c		 |$LL3@ModuleWrit|

; 200  : 
; 201  : 
; 202  : 	for ( i=0;i < sensor_svga_Num;i++)
; 203  : 	{
; 204  : 		HW_WriteRegisters(&sensor_svga[i][0], 3);

  0013c	e3a01003	 mov         r1, #3
  00140	e1a00004	 mov         r0, r4
  00144	eb000000	 bl          |?HW_WriteRegisters@@YAKPAEK@Z|

; 205  : 		RETAILMSG(1, (TEXT(".")));

  00148	e59f0060	 ldr         r0, [pc, #0x60]
  0014c	eb000000	 bl          NKDbgPrintfW
  00150	e2844003	 add         r4, r4, #3
  00154	e2555001	 subs        r5, r5, #1
  00158	1afffff7	 bne         |$LL3@ModuleWrit|

; 206  : 		//RETAILMSG(1,(TEXT(" {0x%x ,0x%02X ,0x%02X},  \r\n"), tem[0],tem[1],tem[2]));
; 207  : 
; 208  : 	}
; 209  : 	RETAILMSG(1,(TEXT("sensor_svga_Num  \r\n")));

  0015c	e59f0048	 ldr         r0, [pc, #0x48]
  00160	eb000000	 bl          NKDbgPrintfW

; 210  : 	/*  ////add mao 20121225
; 211  : 	for(i=1; i<OV3640_REGS; i++)
; 212  : 	{
; 213  : 		HW_WriteRegisters(&OV3640_reg[i][0], 3);
; 214  : 		RETAILMSG(1, (TEXT(".")));
; 215  : 		Sleep(1);
; 216  : 		//	RETAILMSG(OV3640_DEBUG,(TEXT("HW_WriteRegisters: Reg[0x%x] = 0x%x, i = %d.\r\n"), OV3640_reg[i][0], OV3640_reg[i][1], i));
; 217  : 	}
; 218  : 	*/
; 219  : 	//    RETAILMSG(1, (_T("\npreview!\r\n")));
; 220  : /*	
; 221  : 	// preview
; 222  : 	    for(i=0; i<OV3640_REGS_PREVIEW; i++)
; 223  : 	    {
; 224  : 	    	HW_WriteRegisters(&OV3640_reg_preview[i][0], 3);
; 225  : 	    }
; 226  : */
; 227  : 		
; 228  : 	// capture
; 229  : 	/* //add mao 20121225
; 230  : 	for(i=0; i<OV3640_REGS_CAPTURE; i++)
; 231  : 	{
; 232  : 		HW_WriteRegisters(&OV3640_reg_capture[i][0], 3);
; 233  : 		RETAILMSG(1, (TEXT(".")));
; 234  : 		Sleep(1);
; 235  : 	}
; 236  : 	*/
; 237  : 
; 238  : /*
; 239  : 	for(i=0; i<OV3640_REGS_PREVIEW; i++)
; 240  : 	    {
; 241  : 	    		HW_WriteRegisters(&OV3640_reg_preview[i][0], 3);
; 242  : 			RETAILMSG(1, (TEXT(".")));
; 243  : 			Sleep(1);		
; 244  : 	    }
; 245  : */
; 246  : 
; 247  : 	version[0] = (0x3073 & 0xff00)>>8;
; 248  : 	version[1] = 0x3073 & 0xff;

  00164	e3a02073	 mov         r2, #0x73
  00168	e5cd2003	 strb        r2, [sp, #3]
  0016c	e3a03030	 mov         r3, #0x30

; 249  : 	HW_ReadRegisters(&BUF, version, 2);

  00170	e3a02002	 mov         r2, #2
  00174	e28d1002	 add         r1, sp, #2
  00178	e28d0000	 add         r0, sp, #0
  0017c	e5cd3002	 strb        r3, [sp, #2]
  00180	eb000000	 bl          |?HW_ReadRegisters@@YAKPAE0K@Z|

; 250  : 	Sleep(20);

  00184	e3a00014	 mov         r0, #0x14
  00188	eb000000	 bl          Sleep

; 251  : 	RETAILMSG(1, (TEXT("\r\nIIC read 0x3073 0x%x\r\n"),BUF));

  0018c	e5dd1000	 ldrb        r1, [sp]
  00190	e59f0010	 ldr         r0, [pc, #0x10]
  00194	eb000000	 bl          NKDbgPrintfW

; 252  : 	
; 253  :   RETAILMSG(OV3640_DEBUG,(TEXT("ModuleWriteBloc-- \r\n")));
; 254  :   return TRUE;

  00198	e3a00001	 mov         r0, #1

; 255  : }

  0019c	e28dd004	 add         sp, sp, #4
  001a0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  001a4	e12fff1e	 bx          lr
  001a8		 |$LN59@ModuleWrit|
  001a8		 |$LN60@ModuleWrit|
  001a8	00000000	 DCD         |??_C@_1DC@HKFMGEIM@?$AA?$AN?$AA?6?$AAI?$AAI?$AAC?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA0?$AAx?$AA3?$AA0?$AA7?$AA3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  001ac		 |$LN61@ModuleWrit|
  001ac	00000000	 DCD         |??_C@_1CI@GGEAPFIP@?$AAs?$AAe?$AAn?$AAs?$AAo?$AAr?$AA_?$AAs?$AAv?$AAg?$AAa?$AA_?$AAN?$AAu?$AAm?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  001b0		 |$LN62@ModuleWrit|
  001b0	00000000	 DCD         |??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@|
  001b4		 |$LN63@ModuleWrit|
  001b4	00000000	 DCD         |??_C@_1CI@EEBFKHDN@?$AAs?$AAe?$AAn?$AAs?$AAo?$AAr?$AA_?$AA7?$AA2?$AA0?$AAp?$AA_?$AAN?$AAu?$AAm?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  001b8		 |$LN64@ModuleWrit|
  001b8	00000000	 DCD         |??_C@_1CK@LKJCFKF@?$AAs?$AAe?$AAn?$AAs?$AAo?$AAr?$AA_?$AAi?$AAn?$AAi?$AAt?$AA_?$AAN?$AAu?$AAm?$AA?5?$AA?5?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  001bc		 |$LN65@ModuleWrit|
  001bc	00000000	 DCD         |?sensor_init_data@@3PAY02EA|
  001c0		 |$LN66@ModuleWrit|
  001c0	00000000	 DCD         |??_C@_1EK@CANDBJLE@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAV?$AAE?$AAR?$AA_?$AAR?$AAE?$AAG?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@|
  001c4		 |$LN67@ModuleWrit|
  001c4	00000000	 DCD         |??_C@_1FG@LBNCMCND@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAV?$AAE?$AAR?$AA_?$AAR?$AAE?$AAG?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs@|
  001c8		 |$LN68@ModuleWrit|
  001c8	00000000	 DCD         |??_C@_1CE@GALICEFE@?$AAI?$AAI?$AAC?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAv?$AAi?$AAd?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  001cc		 |$LN69@ModuleWrit|
  001cc	00000000	 DCD         |??_C@_1EC@IJNGJMA@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAP?$AAI?$AAD?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?5?$AA?$AN?$AA?6@|
  001d0		 |$LN70@ModuleWrit|
  001d0	00000000	 DCD         |??_C@_1EO@NBOGDNAD@?$AAR?$AAe?$AAa?$AAd?$AA?5?$AAO?$AAV?$AA3?$AA6?$AA4?$AA0?$AA_?$AAP?$AAI?$AAD?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl@|
  001d4		 |$LN71@ModuleWrit|
  001d4	00000000	 DCD         |??_C@_1CE@GOMEJINB@?$AAI?$AAI?$AAC?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAp?$AAi?$AAd?$AA?5?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  001d8		 |$LN72@ModuleWrit|
  001d8	00000000	 DCD         |??_C@_1BA@LPMNJIMA@?$AA?$CF?$AAx?$AA?0?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  001dc		 |$M37564|

			 ENDP  ; |?ModuleWriteBlock@@YAHXZ|, ModuleWriteBlock

	END
